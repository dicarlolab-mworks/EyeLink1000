<MWElements>
  <MWElement name="Eyelink 1k, Socket Link">
    <!-- XPath 2.0 expression defining nodes of this type -->
    <!-- -->
    <match_signature>iodevice[@type="eyelink"]</match_signature>
    
    <!-- Which super-types does the object belong to -->
    <isa>IODevice</isa>
    
    <description>
        Eyelink 1000 Plugin. INSTRUCTIONS BELOW
        
        REQUIRED PARAMETERS:
        eye_dist = Distance between eyes in arbitrary (eyetracker) units (1500 is ok to start with)
        z_dist = Distance from Screen in same arbitrary units (-1000 is ok to start with)
        Adjust these values such as the raw x,y,z coordinates are in the range 0..1
        data_interval should not be too short, but faster than tracker's sampling rate
        tracker_ip contains the trackers IP address, check for working connection using SR-Research's 'simpleexample'
        
        OUTPUT:
        eye_x/_y/_z is the midpoint of the shortest connecting line that is orthogonal to both gaze vectors assuming the tracker runs in binocular mode. Otherwise these values will be empty.
        all other output parameters are specified and described in the Eyelink 1000 manual.
    </description>
	
	<icon>smallIOFolder</icon>

    
    <!-- Payload -->
    <!-- This XML gets inserted when you drop this object into the project -->
    <code>
      <iodevice tag="Eyelink 1000" type="eyelink" data_interval="1ms" tracker_ip="10.1.1.2"
				eye_rx="" eye_ry="" eye_lx="" eye_ly=""
				eye_x="" eye_y="" eye_z=""
				href_rx="" href_ry="" href_lx="" href_ly=""
				pupil_rx="" pupil_ry="" pupil_lx="" pupil_ly=""
				pupil_size_r="" pupil_size_l=""
				eye_time=""
				eye_dist="1500" z_dist="-1000"/>
      <!-- <action type="my_mw_component" tag="My MW Action" />
        ... you get the idea ...
        ...
        -->
    </code>
  </MWElement>
</MWElements>
